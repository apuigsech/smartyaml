name: Build and Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for proper version detection
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build source distribution and wheel
      run: python -m build

    - name: Check built packages
      run: |
        twine check dist/*
        ls -la dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test-built-package:
    name: Test built package
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: ["3.9", "3.11", "3.12"]
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Install built package
      run: |
        pip install --upgrade pip
        # Install the wheel (more robust than source dist for testing)
        pip install dist/*.whl

    - name: Test basic imports
      run: |
        python -c "
        import smartyaml
        print(f'SmartYAML version: {smartyaml.__version__}')
        
        # Test basic functionality
        import tempfile
        import os
        
        # Create a simple test file
        with tempfile.NamedTemporaryFile(mode='w', suffix='.yaml', delete=False) as f:
            f.write('test: hello world')
            test_file = f.name
        
        try:
            result = smartyaml.load(test_file)
            print(f'Test result: {result}')
            print('Package installation and basic functionality test passed!')
        finally:
            os.unlink(test_file)
        "

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build, test-built-package]
    environment:
      name: pypi
      url: https://pypi.org/p/pysmartyaml
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true

  publish-github:
    name: Publish to GitHub Releases
    runs-on: ubuntu-latest
    needs: [build, test-built-package]
    if: github.event_name == 'release'
    permissions:
      contents: write
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Upload to GitHub Releases
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true

  create-github-issue-on-failure:
    name: Create issue on failure
    runs-on: ubuntu-latest
    needs: [publish-pypi]
    if: failure() && github.event_name == 'release'
    permissions:
      issues: write
    
    steps:
    - name: Create issue on failure
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Release ${context.payload.release.tag_name} failed to publish to PyPI`,
            body: `The release workflow failed to publish version ${context.payload.release.tag_name} to PyPI.
            
            **Workflow run:** ${context.payload.workflow_run.html_url || context.payload.repository.html_url + '/actions/runs/' + context.runId}
            **Release:** ${context.payload.release.html_url}
            
            Please check the workflow logs and retry the publication manually if needed.`,
            labels: ['bug', 'release', 'automation']
          })